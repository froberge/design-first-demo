{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "CoffeeShop API",
    "description" : "This is the API for the product Service",
    "contact" : {
      "email" : "froberge@redhat.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0-SHAPSHOT"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/froberge/product_service/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  } ],
  "tags" : [ {
    "name" : "Product Resource",
    "description" : "All the product related Call"
  } ],
  "paths" : {
    "/product" : {
      "get" : {
        "tags" : [ "Product Resource" ],
        "summary" : "Return all the products list",
        "description" : "Return a list of all the products in the coffeeShop. Test 2.\n",
        "operationId" : "getProducts",
        "responses" : {
          "200" : {
            "description" : "Products found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Product Resource" ],
        "summary" : "adds a product in the product list",
        "description" : "Adds an new item to the product list",
        "operationId" : "addProduct",
        "requestBody" : {
          "description" : "Product item to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Product"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/product/{id}" : {
      "get" : {
        "tags" : [ "Product Resource" ],
        "summary" : "Select a particular product",
        "description" : "Return the product matching the proper id\n",
        "operationId" : "getProductById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "example" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "No Product Found"
          }
        }
      }
    },
    "/product/count" : {
      "get" : {
        "tags" : [ "Product Resource" ],
        "summary" : "Return the number of product in the list of product",
        "description" : "Return the number of different product offer at the coffeeshop\n",
        "operationId" : "getProductsCount",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int64"
                }
              }
            }
          }
        }
      }
    },
    "/product/size/{size}" : {
      "get" : {
        "tags" : [ "Product Resource" ],
        "summary" : "Return the products for a given size",
        "description" : "Return all products for a certain size\n",
        "operationId" : "getProductsBySize",
        "parameters" : [ {
          "name" : "size",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "small"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/health" : {
      "get" : {
        "tags" : [ "Product Resource" ],
        "summary" : "Check if the service is up and ready to receive request",
        "description" : "Check if the service is up and ready to receive request\n",
        "operationId" : "health",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "LocalDate" : {
        "type" : "string",
        "format" : "date",
        "example" : "2022-03-10"
      },
      "Product" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "example" : "Cortado"
          },
          "description" : {
            "type" : "string",
            "example" : "Desc_Cortado_01"
          },
          "size" : {
            "type" : "string",
            "example" : "small"
          },
          "price" : {
            "type" : "string",
            "example" : "3.5"
          },
          "create_date" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        }
      }
    }
  }
}